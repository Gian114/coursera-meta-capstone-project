//check this available data for fetchAPI
const availableTimesByDate = {
    '2023-08-29': ['17', '18', '19', '20', '21'],
    '2023-09-01': ['17', '18', '19', '20', '21'],
    '2023-09-02': ['17', '18', '19', '20', '21'],
    '2023-09-03': ['17', '18', '19', '20', '21'],
    '2023-09-04': ['17', '18', '19', '20', '21'],
    '2023-09-05': ['17', '18', '19', '20', '21'],
    '2023-09-06': ['17', '18', '19', '20', '21'],
    '2023-09-07': ['17', '18', '19', '20', '21'],
    '2023-09-08': ['17', '18', '19', '20', '21'],
    '2023-09-09': ['17', '18', '19', '20', '21'],
    '2023-09-10': ['17', '18', '19', '20', '21'],
    '2023-09-11': ['17', '18', '19', '20', '21'],
    '2023-09-12': ['17', '18', '19', '20', '21'],
    '2023-09-13': ['17', '18', '19', '20', '21'],
    '2023-09-14': ['17', '18', '19', '20', '21'],
    '2023-09-15': ['17', '18', '19', '20', '21'],
    '2023-09-16': ['17', '18', '19', '20', '21'],
    '2023-09-17': ['17', '18', '19', '20', '21'],
    '2023-09-18': ['17', '18', '19', '20', '21'],
    '2023-09-19': ['17', '18', '19', '20', '21'],
    '2023-09-20': ['17', '18', '19', '20', '21'],
    '2023-09-21': ['17', '18', '19', '20', '21'],
    '2023-09-22': ['17', '18', '19', '20', '21'],
    '2023-09-23': ['17', '18', '19', '20', '21'],
    '2023-09-24': ['17', '18', '19', '20', '21'],
    '2023-09-25': ['17', '18', '19', '20', '21'],
    '2023-09-26': ['17', '18', '19', '20', '21'],
    '2023-09-27': ['17', '18', '19', '20', '21'],
    '2023-09-28': ['17', '18', '19', '20', '21'],
    '2023-09-29': ['17', '18', '19', '20', '21'],
    '2023-09-30': ['17', '18', '19', '20', '21'],
    '2023-10-01': ['17', '18', '19', '20', '21'],
  };


  const fetchAPI = (date) => {
    return new Promise((resolve, reject) => {
        setTimeout(() =>{
            if(availableTimesByDate[date]){
                resolve(availableTimesByDate[date])
            }
            else{
                reject(new Error('No available times for the selected date.'));
            }
        } , 1000)
    })
  }

  const submitAPI = (date, timer) => {
    console.log(date, timer);
    
    availableTimesByDate[date] = availableTimesByDate[date].filter(time => time !== timer);

    return new Promise((resolve, reject) => {
      setTimeout(() => {
        if (date) {
          resolve(true); // Simulate successful submission
        } else {
          reject(new Error('Form submission failed.'));
        }
      }, 1000); // Simulate API delay
    });
  };

  export{fetchAPI,submitAPI}